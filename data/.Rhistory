---
title: "Introduction to open data science - course"
author: "Emma Haapa"
output:
html_document:
toc: TRUE
# Introduction to open data science {#anchor}
---
# About the project
*Write a short description about the course and add a link to your github repository here. This is an R markdown (.Rmd) file so you can use R markdown syntax. See the 'Useful links' page in the mooc area (chapter 1) for instructions.*
# About the project
> A<-matrix(c(1,2,3,4,5,6),3,2) #Muodostetaan 3X2 matriisi A
> A
[,1] [,2]
[1,] 1 4
[2,] 2 5
[3,] 3 6
> B<-matrix(c(1,2,3,4),2,2) #Muodostetaan 2X2 matriisi B
> B
[,1] [,2]
[1,] 1 3
chooseCRANmirror()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
> A<-matrix(c(1,2,3,4,5,6),3,2) #Muodostetaan 3X2 matriisi A
> A
[,1] [,2]
[1,] 1 4
[2,] 2 5
[3,] 3 6
> B<-matrix(c(1,2,3,4),2,2) #Muodostetaan 2X2 matriisi B
> B
[,1] [,2]
[1,] 1 3
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
[2,] 2 4
> A<-matrix(c(1,2,3,4,5,6),3,2) #Muodostetaan 3X2 matriisi A
> A
[,1] [,2]
[1,] 1 4
[2,] 2 5
[3,] 3 6
> B<-matrix(c(1,2,3,4),2,2) #Muodostetaan 2X2 matriisi B
> B
[,1] [,2]
[1,] 1 3
utils:::menuInstallPkgs()
[2,] 2 4> A<-matrix(c(1,2,3,4,5,6),3,2) #Muodostetaan 3X2 matriisi A
> A
[,1] [,2]
[1,] 1 4
[2,] 2 5
[3,] 3 6
> B<-matrix(c(1,2,3,4),2,2) #Muodostetaan 2X2 matriisi B
> B
[,1] [,2]
[1,] 1 3
[2,] 2 4
> A<-matrix(c(2,8,4,1,3,4),2,3)
A<-matrix(c(2,8,4,1,3,4),2,3)
A<-matrix(c(2,8,4,1,3,4),2,3)
A
B<-matrix(c(3,1,8,4,2,3),3,2)
B
A%*%B
C<-matrix(c(5,6,1,7,2,5),2,3)
B%*%C
D<-matrix(c(5,6,2,1,7,8,2,5,1),3,3)
tr(D)
trace(D)
d
D
A<-matrix(c(5,6,1,7),2,2)
A
B<-matrix(c(3,4,2,3),2,2)
B
C==D
det(A)
det(10*B)
det(10*A)
det(B)
det(A%*%B)
det(D)
det(t(D))
kronecker(B,D)
det(kronecker(B,D))
(det(A)^3)*(det(B)^2)
(det(B)^3)*(det(D)^2)
q()
learning2014 <- read.table(file = "learning2014.txt")
options(max.print=1000000)
?write.csv
write.table(learning2014, file = "learning2014.txt", append = FALSE, quote = TRUE, sep = " ",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
read.table(file = "learning2014.txt")
learning14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
write.table(learning2014, file = "learning2014.txt", append = FALSE, quote = TRUE, sep = " ",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
setwd("F:/IODS-project/data")
learning14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
library(dplyr) #accessed tge dplyr-library
learning14$Attitude
learning14$Attitude / 10
learning14$attitude <- learning14$Attitude / 10
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(learning14, one_of(deep_questions))
learning14$deep <- rowMeans(deep_columns)
surface_columns <- select(learning14, one_of(surface_questions))
learning14$surf <- rowMeans(surface_columns)
strategic_columns <- select(learning14, one_of(strategic_questions))
learning14$stra <- rowMeans(strategic_columns)
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
learning2014 <- select(learning14, one_of(keep_columns))
colnames(learning2014)[2] <- "age"
colnames(learning2014)[7] <- "points"
colnames(learning2014)
learning2014 <- filter(learning2014, points > 0)
options(max.print=1000000)
write.table(learning2014, file = "learning2014.txt", append = FALSE, quote = TRUE, sep = " ",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
str(learning2014)
options(max.print=1000000)
learning2014 <- read.table(file = "learning2014.txt")
library(dplyr) #accessed the dplyr-library
library(ggplot2) #accessed the ggplot2-library
p1 <- ggplot(learning2014, aes(x = attitude, y = points, col =gender))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's attitude versus exam points")
p4
p1 <- ggplot(learning2014, aes(x = deep, y = points, col =gender))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's deep learning skills versus exam points")
p4
p1 <- ggplot(learning2014, aes(x = stra, y = points, col =gender))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's strategic learning skills versus exam points")
p4
p1 <- ggplot(learning2014, aes(x = deep, y = points, col =gender))
p2 <- p1 + geom_point()
p3 <- p2 + geom_smooth(method = "lm")
p4 <- p3 + ggtitle("Student's deep learning skills versus exam points")
p4
p4
ggsave("plot.png", width = 5, height = 5)
p11 <- ggplot(learning2014, aes(x = deep, y = points, col =gender))
p22 <- p1 + geom_point()
p33 <- p2 + geom_smooth(method = "lm")
p44 <- p3 + ggtitle("Student's deep learning skills versus exam points")
p44
ggsave("plot1.png", width = 5, height = 5)
p111 <- ggplot(learning2014, aes(x = stra, y = points, col =gender))
p222 <- p1 + geom_point()
p333 <- p2 + geom_smooth(method = "lm")
p444 <- p3 + ggtitle("Student's strategic learning skills versus exam points")
p444
ggsave("plot2.png", width = 5, height = 5)
library(GGally)
install.packages("GGally")
library(GGally)
p <- ggpairs(learning2014, mapping = aes(col=gender, alpha=0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
dim
dim(learning14)
str(learning14)
dim(learning2014)
str(learning2014)
learning14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
source('F:/IODS-project/data/Create_learning2014.R')
# Reading the full learning14 data into R
learning14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
# The dimensions of the data:
dim(learning14)
# The learning14 data has 183 rows and 60 columns, i. e. 183 observations and 60 variables.
# The structure of the data:
str(learning14)
# The str-function also states that there are 183 observations and 60 variables in the data. The variables are coded as combinations of letters that refer to the statement or question as a variable.
library(dplyr) #accessed tge dplyr-library
# print the "Attitude" column vector of the lrn14 data
learning14$Attitude
# divide each number in the column vector
learning14$Attitude / 10
# create column 'attitude' by scaling the column "Attitude"
learning14$attitude <- learning14$Attitude / 10
# Creating objects that refer to all the questions that assess different types of learning: deep, surface and strategic learning.
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# Selecting columns that have to do with deep learning and creating a column deep by averaging.
deep_columns <- select(learning14, one_of(deep_questions))
learning14$deep <- rowMeans(deep_columns)
# Selecting columns that have to do with surface learning and creating a column surf by averaging.
surface_columns <- select(learning14, one_of(surface_questions))
learning14$surf <- rowMeans(surface_columns)
#  Selecting columns that have to do with strategic learning and creating a column stra by averaging.
strategic_columns <- select(learning14, one_of(strategic_questions))
learning14$stra <- rowMeans(strategic_columns)
# choose a handful of columns to keep
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# select the 'keep_columns' to create a new dataset
learning2014 <- select(learning14, one_of(keep_columns))
# print out the column names of the data
colnames(learning2014)
# change the name of the second column
colnames(learning2014)[2] <- "age"
# change the name of "Points" to "points"
colnames(learning2014)[7] <- "points"
# print out the new column names of the data
colnames(learning2014)
# Selecting the rows where points is greater than zero
learning2014 <- filter(learning2014, points > 0)
# Stucture of the new dataset
str(learning2014)
options(max.print=1000000)
?write.csv
write.table(learning2014, file = "learning2014.txt", append = FALSE, quote = TRUE, sep = " ",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
read.table(file = "learning2014.txt")
str(learning2014)
head(learning2014)
?head
ggpairs(learning2014, lower = list(combo = wrap("facethist", bins = 20)))
my_model4 <- lm(points ~ deep + stra + surf, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ age + stra + surf, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + stra + surf, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + deep + surf, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + age + surf, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + gender + surf, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + stra + surf, data = learning2014)
my_model4 <- lm(points ~ attitude + stra + surf, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + stra, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + deep, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + age, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + stra, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + stra + surf, data = learning2014)
summary(my_model4)
summary(my_model4)
my_model4 <- lm(points ~ attitude + stra + surf, data = learning2014)
summary(my_model4)
ggpairs(learning2014, lower = list(combo = wrap("facethist", bins = 20)))
my_model4 <- lm(points ~ attitude + stra + surf, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + stra, data = learning2014)
summary(my_model4)
my_model4 <- lm(points ~ attitude + stra, data = learning2014)
par(mfrow = c(2,2))
plot(my_model4, which=c(1,2,5))
my_model4 <- lm(points ~ attitude + stra, data = learning2014)
par(mfrow = c(2,2))
plot(my_model4, which=c(2,5,1))
library(ggplot2)
library(GGally)
# create an plot matrix with ggpairs()
ggpairs(learning2014, lower = list(combo = wrap("facethist", bins = 20)))
# create a regression model with multiple explanatory variables
my_model4 <- lm(points ~ attitude + stra, data = learning2014)
# print out a summary of the model
summary(my_model4)
