---
title: "Introduction to open data science - course"
author: "Emma Haapa"
output:
html_document:
toc: TRUE
# Introduction to open data science {#anchor}
---
# About the project
*Write a short description about the course and add a link to your github repository here. This is an R markdown (.Rmd) file so you can use R markdown syntax. See the 'Useful links' page in the mooc area (chapter 1) for instructions.*
# About the project
> A<-matrix(c(1,2,3,4,5,6),3,2) #Muodostetaan 3X2 matriisi A
> A
[,1] [,2]
[1,] 1 4
[2,] 2 5
[3,] 3 6
> B<-matrix(c(1,2,3,4),2,2) #Muodostetaan 2X2 matriisi B
> B
[,1] [,2]
[1,] 1 3
chooseCRANmirror()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
> A<-matrix(c(1,2,3,4,5,6),3,2) #Muodostetaan 3X2 matriisi A
> A
[,1] [,2]
[1,] 1 4
[2,] 2 5
[3,] 3 6
> B<-matrix(c(1,2,3,4),2,2) #Muodostetaan 2X2 matriisi B
> B
[,1] [,2]
[1,] 1 3
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
[2,] 2 4
> A<-matrix(c(1,2,3,4,5,6),3,2) #Muodostetaan 3X2 matriisi A
> A
[,1] [,2]
[1,] 1 4
[2,] 2 5
[3,] 3 6
> B<-matrix(c(1,2,3,4),2,2) #Muodostetaan 2X2 matriisi B
> B
[,1] [,2]
[1,] 1 3
utils:::menuInstallPkgs()
[2,] 2 4> A<-matrix(c(1,2,3,4,5,6),3,2) #Muodostetaan 3X2 matriisi A
> A
[,1] [,2]
[1,] 1 4
[2,] 2 5
[3,] 3 6
> B<-matrix(c(1,2,3,4),2,2) #Muodostetaan 2X2 matriisi B
> B
[,1] [,2]
[1,] 1 3
[2,] 2 4
> A<-matrix(c(2,8,4,1,3,4),2,3)
A<-matrix(c(2,8,4,1,3,4),2,3)
A<-matrix(c(2,8,4,1,3,4),2,3)
A
B<-matrix(c(3,1,8,4,2,3),3,2)
B
A%*%B
C<-matrix(c(5,6,1,7,2,5),2,3)
B%*%C
D<-matrix(c(5,6,2,1,7,8,2,5,1),3,3)
tr(D)
trace(D)
d
D
A<-matrix(c(5,6,1,7),2,2)
A
B<-matrix(c(3,4,2,3),2,2)
B
C==D
det(A)
det(10*B)
det(10*A)
det(B)
det(A%*%B)
det(D)
det(t(D))
kronecker(B,D)
det(kronecker(B,D))
(det(A)^3)*(det(B)^2)
(det(B)^3)*(det(D)^2)
q()
A <- matrix(c(1,2,4,1),2,2)
A
B <- matrix(c(7,4,4,7),2,2)
B> ev<-eigen(A)
A <- matrix(c(1,2,4,1),2,2)
A
B <- matrix(c(7,4,4,7),2,2)
B
C <- matrix(c(1,3,-10,1,1,9,0,2,1),3,3)
C
> ev<-eigen(A)
ev<-eigen(A)
ev$values #S:n ominaisarvot ja
ev$vectors #vastaavat ominaisvektorit
diag(ev$values) #Diagonaalimatriisi, jonka paadiagonaalilla
diag(sqrt(ev$values)) #Diagonaalimatriisi, jonka
ex<-eigen(B)
ex$values #S:n ominaisarvot ja
ex$vectors #vastaavat ominaisvektorit
diag(ex$values) #Diagonaalimatriisi, jonka paadiagonaalilla
diag(sqrt(ex$values)) #Diagonaalimatriisi, jonka
ey<-eigen(C)
ey$values #S:n ominaisarvot ja
ey$vectors #vastaavat ominaisvektorit
diag(ey$values) #Diagonaalimatriisi, jonka paadiagonaalilla
diag(sqrt(ey$values)) #Diagonaalimatriisi, jonka
knitr::opts_chunk$set(echo = TRUE)
alc <- read.csv2(file = "F:\IODS-project\data\alc2.csv", col_names = TRUE, col_types = NULL)
alc <- read.csv2(file = "alc2.csv", col_names = TRUE, col_types = NULL)
alc <- read.csv2(file = "alc2.csv", header = TRUE)
alc <- read.csv2(file = "F:\IODS-project\data\alc2.csv", header = TRUE)
alc <- read.csv2(file = "PUBLIC\IODS-project\data\alc2.csv", header = TRUE)
alc <- read.csv(file = "PUBLIC\IODS-project\data\alc2.csv", header = TRUE)
library(readr)
library(tidyr)
alc <- read_csv2(file = "PUBLIC\IODS-project\data\alc2.csv", header = TRUE)
alc <- read_csv2(file = "alc2.csv", col_names = TRUE, col_types = NULL)
setwd("F:/IODS-project/data")
alc <- read_csv2(file = "alc2.csv", col_names = TRUE, col_types = NULL)
colnames(alc)
setwd("F:/IODS-project/data")
setwd("F:/IODS-project/data")
library(dplyr) #accessed the dplyr-library
library(ggplot2) #accessed the ggplot2-library
library(readr) #accessed the readr-library
library(tidyr) #accessed tidyr-library
options(max.print=1000000)
alc <- read_csv2(file = "alc2.csv", col_names = TRUE, col_types = NULL)
alc <- read_csv2(file = "alc2.csv", col_names = TRUE, col_types = NULL)
setwd("F:/IODS-project")
setwd("F:/IODS-project/data")
alc <- read_csv2(file = "alc2.csv", col_names = TRUE, col_types = NULL)
alc <- read_csv2(file = "alc2.csv", col_names = TRUE, col_types = NULL)
knitr::opts_chunk$set(echo = TRUE)
CrossTable(alc$failures, alc$alc_use)
library(gmodels)
install.packages("gmodels")
library(gmodels)
library(gmodels)
CrossTable(alc$failures, alc$alc_use)
install.packages("gdata")
library(gdata)
CrossTable(alc$failures, alc$alc_use)
library(gmodels)
library(gdata)
CrossTable(alc$failures, alc$alc_use)
?CrossTable
library(gmodels)
library(gdata)
g1 <- ggplot(data = alc, aes(x = alc_use, fill=sex))
# define the plot as a bar plot and draw it
g1 + geom_bar()
g2 <- ggplot(data = alc, aes(x = high_use, fill=sex))
# define the plot as a bar plot and draw it
g2 + geom_bar()
g3 <- ggplot(data = alc, aes(x = failures, fill=sex))
# define the plot as a bar plot and draw it
g3 + geom_bar()
g4 <- ggplot(data = alc, aes(x = famrel, fill=sex))
# define the plot as a bar plot and draw it
g4 + geom_bar()
g5 <- ggplot(data = alc, aes(x = freetime, fill=sex))
# define the plot as a bar plot and draw it
g5 + geom_bar()
g6 <- ggplot(data = alc, aes(x = goout, fill=sex))
# define the plot as a bar plot and draw it
g6 + geom_bar()
g6 <- ggplot(data = alc, aes(x = goout))
# define the plot as a bar plot and draw it
g6 + geom_bar()
g7 <- g6 + facet_wrap("sex")
g7
g7
g6 <- ggplot(data = alc, aes(x = goout, fill=sex))
# define the plot as a bar plot and draw it
g6 + geom_bar()
# draw a bar plot of each variable
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
# draw a bar plot of each variable
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", "sex", scales = "free") + geom_bar()
# draw a bar plot of each variable
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", "sex", scales = "free") + geom_bar()
# draw a bar plot of each variable
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
gather(alc) %>% glimpse
